{"version":3,"sources":["webpack://weather-app/./src/domNodeCreator.js","webpack://weather-app/./src/index.js"],"names":["htmlTag","options","text","node","document","createElement","Object","keys","forEach","key","setAttribute","textContent","result","getElementById","addEventListener","location","unit","url","constructURL","fetch","mode","then","response","json","data","console","log","window","temp","main","icon","weather","weatherDesc","description","innerHTML","imgSrc","locationResultEle","domNodeCreator","class","toUpperCase","weatherIconEle","src","alt","weatherDescEle","tempResultEle","unitEle","appendChild","renderResult","catch","error","getweatherdatafor","value","querySelector","checked"],"mappings":"mBAAA,SAAgBA,EAASC,EAAU,GAAIC,EAAO,MAC5C,MAAMC,EAAOC,SAASC,cAAcL,GAMpC,OALaM,OAAOC,KAAKN,GACpBO,SAASC,IACZN,EAAKO,aAAaD,EAAKR,EAAQQ,OAEjCN,EAAKQ,YAAcT,EACZC,GCDHS,EAASR,SAASS,eAAe,UAiCvCT,SAASS,eAAe,UAAUC,iBAAiB,SAAS,MAhB5D,SAA2BC,EAAUC,GACjC,MAAMC,EAtBV,SAAsBF,EAAUC,GAC9B,MAAO,qDAAqDD,kDAAyDC,IAqBvGE,CAAaH,EAAUC,GACnCG,MAAMF,EAAK,CAAEG,KAAM,SAClBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACHC,QAAQC,IAAIF,GACZG,OAAOH,KAAOA,EACd,MAAMI,EAAOJ,EAAKK,KAAKD,KACjBE,EAAON,EAAKO,QAAQ,GAAGD,KACvBE,EAAcR,EAAKO,QAAQ,GAAGE,aAxB5C,SAAsBL,EAAMb,EAAUe,EAAME,EAAahB,GACrDJ,EAAOsB,UAAY,GACnB,MAAMC,EAAS,oCAAoCL,WAC7CM,EAAoBC,EAAe,IAAK,CAACC,MAAO,YAAavB,EAASwB,eACtEC,EAAiBH,EAAe,MAAO,CAACI,IAAKN,EAAQO,IAAK,eAAgBJ,MAAO,iBACjFK,EAAiBN,EAAe,IAAK,CAACC,MAAO,gBAAiBN,GAC9DY,EAAgBP,EAAe,IAAK,CAACC,MAAO,QAASV,GACrDiB,EAAUR,EAAe,MAAO,CAACC,MAAO,QAAoB,UAARtB,EAAmB,KAAO,MACpFJ,EAAOkC,YAAYV,GACnBxB,EAAOkC,YAAYN,GACnB5B,EAAOkC,YAAYH,GACnBC,EAAcE,YAAYD,GAC1BjC,EAAOkC,YAAYF,GAafG,CAAanB,EAAMb,EAAUe,EAAME,EAAahB,MAEnDgC,OAAOC,QAOVC,CAFiB9C,SAASS,eAAe,QAAQsC,MACpC/C,SAASgD,cAAc,iBAAiBC,QACjB,WAAa,c","file":"main.js","sourcesContent":["export default (htmlTag, options = {}, text = '') => {\n  const node = document.createElement(htmlTag);\n  const keys = Object.keys(options);\n  keys.forEach((key) => {\n    node.setAttribute(key, options[key]);\n  });\n  node.textContent = text;\n  return node;\n};\n\n","import domNodeCreator from './domNodeCreator'\n\nfunction constructURL(location, unit) {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=786b74dc8fce162462303a21c3e890c0&units=${unit}`;\n}\n\nconst result = document.getElementById('result');\n\nfunction renderResult(temp, location, icon, weatherDesc, unit) {\n    result.innerHTML = ''\n    const imgSrc = `http://openweathermap.org/img/wn/${icon}@4x.png`\n    const locationResultEle = domNodeCreator('p', {class: \"location\"}, location.toUpperCase());\n    const weatherIconEle = domNodeCreator('img', {src: imgSrc, alt: \"weather icon\", class: \"weather-icon\"}, )\n    const weatherDescEle = domNodeCreator('p', {class: \"weather-desc\"}, weatherDesc)\n    const tempResultEle = domNodeCreator('p', {class: \"temp\"}, temp)\n    const unitEle = domNodeCreator('sup', {class: \"unit\"}, `${unit == 'metric' ? '°C' : '°F'}`)\n    result.appendChild(locationResultEle)\n    result.appendChild(weatherIconEle)\n    result.appendChild(weatherDescEle)\n    tempResultEle.appendChild(unitEle)\n    result.appendChild(tempResultEle)\n}\n\nfunction getweatherdatafor(location, unit) {\n    const url = constructURL(location, unit);\n    fetch(url, { mode: 'cors' })\n    .then((response) => response.json())\n    .then((data) => {\n        console.log(data)\n        window.data = data\n        const temp = data.main.temp\n        const icon = data.weather[0].icon \n        const weatherDesc = data.weather[0].description\n        renderResult(temp, location, icon, weatherDesc, unit);\n    })\n    .catch((error)=>{\n    })\n}\n\ndocument.getElementById('submit').addEventListener('click', () => {\n  const location = document.getElementById('city').value;\n  const unit = document.querySelector('.switch input').checked\n  getweatherdatafor(location, (unit ? 'imperial' : 'metric'));\n});\n\n"],"sourceRoot":""}