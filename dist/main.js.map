{"version":3,"sources":["webpack://weather-app/./src/domNodeCreator.js","webpack://weather-app/./src/renderDOM.js","webpack://weather-app/./src/index.js","webpack://weather-app/./src/weatherAPI.js"],"names":["htmlTag","options","text","node","document","createElement","Object","keys","forEach","key","setAttribute","textContent","result","getElementById","onclick","async","location","value","unit","querySelector","checked","temp","icon","weatherDesc","innerHTML","imgSrc","locationResultEle","domNodeCreator","class","toUpperCase","weatherIconEle","src","alt","weatherDescEle","tempResultEle","unitEle","appendChild","Promise","resolve","reject","url","constructURL","fetch","mode","then","response","json","data","main","weather","description"],"mappings":"mBAAA,SAAgBA,EAASC,EAAU,GAAIC,EAAO,MAC5C,MAAMC,EAAOC,SAASC,cAAcL,GAMpC,OALaM,OAAOC,KAAKN,GACpBO,SAASC,IACZN,EAAKO,aAAaD,EAAKR,EAAQQ,OAEjCN,EAAKQ,YAAcT,EACZC,GCLHS,EAASR,SAASS,eAAe,UCQvCT,SAASS,eAAe,UAAUC,QAPlCC,iBACE,MAAMC,EAAWZ,SAASS,eAAe,QAAQI,MAC3CC,EAAOd,SAASe,cAAc,iBAAiBC,SDDvD,UAAsB,KACpBC,EAAI,SAAEL,EAAQ,KAAEM,EAAI,YAAEC,EAAW,KAAEL,IAEnCN,EAAOY,UAAY,GACnB,MAAMC,EAAS,oCAAoCH,WAC7CI,EAAoBC,EAAe,IAAK,CAAEC,MAAO,YAAcZ,EAASa,eACxEC,EAAiBH,EAAe,MAAO,CAAEI,IAAKN,EAAQO,IAAK,eAAgBJ,MAAO,iBAClFK,EAAiBN,EAAe,IAAK,CAAEC,MAAO,gBAAkBL,GAChEW,EAAgBP,EAAe,IAAK,CAAEC,MAAO,QAAUP,GACvDc,EAAUR,EAAe,MAAO,CAAEC,MAAO,QAAsB,WAATV,EAAoB,KAAO,MACvFN,EAAOwB,YAAYV,GACnBd,EAAOwB,YAAYN,GACnBlB,EAAOwB,YAAYH,GACnBC,EAAcE,YAAYD,GAC1BvB,EAAOwB,YAAYF,GCXnB,OCFA,SAAwBlB,EAAUE,GAChC,OAAO,IAAImB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EANV,SAAsBxB,EAAUE,GAC9B,MAAO,qDAAqDF,kDAAyDE,IAKvGuB,CAAazB,EAAUE,GACnCwB,MAAMF,EAAK,CAAEG,KAAM,SAChBC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACL,MAAM,KAAE1B,GAAS0B,EAAKC,MAChB,KAAE1B,GAASyB,EAAKE,QAAQ,GACxB1B,EAAcwB,EAAKE,QAAQ,GAAGC,YACpCZ,EAAQ,CACNjB,OAAML,WAAUM,OAAMC,cAAaL,eDTnB,CAAeF,EAAWE,EAAO,WAAa,a","file":"main.js","sourcesContent":["export default (htmlTag, options = {}, text = '') => {\n  const node = document.createElement(htmlTag);\n  const keys = Object.keys(options);\n  keys.forEach((key) => {\n    node.setAttribute(key, options[key]);\n  });\n  node.textContent = text;\n  return node;\n};\n","import domNodeCreator from './domNodeCreator';\n\nconst result = document.getElementById('result');\n\nfunction renderResult({\n  temp, location, icon, weatherDesc, unit,\n}) {\n  result.innerHTML = '';\n  const imgSrc = `http://openweathermap.org/img/wn/${icon}@4x.png`;\n  const locationResultEle = domNodeCreator('p', { class: 'location' }, location.toUpperCase());\n  const weatherIconEle = domNodeCreator('img', { src: imgSrc, alt: 'weather icon', class: 'weather-icon' });\n  const weatherDescEle = domNodeCreator('p', { class: 'weather-desc' }, weatherDesc);\n  const tempResultEle = domNodeCreator('p', { class: 'temp' }, temp);\n  const unitEle = domNodeCreator('sup', { class: 'unit' }, `${unit === 'metric' ? '°C' : '°F'}`);\n  result.appendChild(locationResultEle);\n  result.appendChild(weatherIconEle);\n  result.appendChild(weatherDescEle);\n  tempResultEle.appendChild(unitEle);\n  result.appendChild(tempResultEle);\n}\n\nexport default renderResult;","import renderResult from './renderDOM';\nimport getWeatherdata from './weatherAPI';\n\nasync function cb() {\n  const location = document.getElementById('city').value;\n  const unit = document.querySelector('.switch input').checked;\n  const weatherData = await getWeatherdata(location, (unit ? 'imperial' : 'metric'));\n  renderResult(weatherData);\n}\n\ndocument.getElementById('submit').onclick = cb;","const weatherAPI = (() => {\n  function constructURL(location, unit) {\n    return `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=786b74dc8fce162462303a21c3e890c0&units=${unit}`;\n  }\n\n  function getWeatherdata(location, unit) {\n    return new Promise((resolve, reject) => {\n      const url = constructURL(location, unit);\n      fetch(url, { mode: 'cors' })\n        .then((response) => response.json())\n        .then((data) => {\n          const { temp } = data.main;\n          const { icon } = data.weather[0];\n          const weatherDesc = data.weather[0].description;\n          resolve({\n            temp, location, icon, weatherDesc, unit,\n          });\n        });\n    });\n  }\n  return getWeatherdata;\n})();\n\nexport default weatherAPI;"],"sourceRoot":""}